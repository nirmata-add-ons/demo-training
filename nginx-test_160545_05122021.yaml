---
apiVersion: "v1"
kind: "Service"
metadata:
  annotations: {}
  name: "dolis"
  labels:
    app.kubernetes.io/name: "nginx-catalog"
    app.kubernetes.io/component: "deployment.dolis"
spec:
  externalIPs: []
  healthCheckNodePort: 0
  loadBalancerSourceRanges: []
  type: "NodePort"
  selector:
    app.kubernetes.io/component: "deployment.dolis"
  ports:
  - name: "tcp"
    port: 8080
    protocol: "TCP"
    targetPort: 8080

---
kind: "Deployment"
apiVersion: "apps/v1"
metadata:
  annotations: {}
  name: "dolis"
  labels:
    app.kubernetes.io/name: "nginx-catalog"
    app.kubernetes.io/component: "deployment.dolis"
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/component: "deployment.dolis"
    matchExpressions: []
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/name: "nginx-catalog"
        app.kubernetes.io/component: "deployment.dolis"
    spec:
      terminationGracePeriodSeconds: 30
      nodeSelector: {}
      containers:
      - name: "dolis"
        image: "nginx:latest"
        command: []
        args: []
---
apiVersion: "networking.k8s.io/v1"
kind: "Ingress"
metadata:
  annotations: {}
  name: "dolis-svc"
  labels:
    app.kubernetes.io/name: "git-demo"
    app.kubernetes.io/instance: "git-demo"
spec:
  ingressClassName: ""
  backend:
    serviceName: "dolis"
    servicePort: 8080
  rules:
  - host: "xyz.com"
    http:
      paths:
      - path: "         /"
        backend:
          serviceName: "dolis"
          servicePort: 8080
